#!/usr/bin/env ruby

require_relative 'lib/environment'
require_relative 'lib/argument_parser'
require_relative 'lib/interactions'


# Router:
class HipPublisher
  include Interactions
  attr_reader :options

  def initialize
    @options = ArgumentParser.parse
    Environment.environment = @options[:environment] || "production"
  end

  def main
    database = Environment.database_connection

    if options[:command] == "search"
          search_term = ask("What do you want to search for?")
          search_songwriters_for(search_term)
    elsif @options[:command] == "addWriter"
      error_messages = ArgumentParser.validate(options)
      if error_messages.empty?
        songwriter = Songwriter.new(options)
        songwriter.save
        puts "Songwriter #{options[:name]} was created."
      else
        puts error_messages
      end
    elsif options[:command] == "list"
      list_songwriters()
    elsif options[:command] == "edit"
      if songwriter = Songwriter.find(options[:id])
        songwriter.update(options)
        puts "Songwriter #{songwriter.id} is now named #{songwriter.name}"
      else
        puts "Songwriter #{options[:id]} couldn't be found."
      end
    else
      puts "Command not implemented"
    end
  end

  def list_songwriters()
    puts "All Songwriters:"
    puts Songwriter.all
  end

  def search_songwriters_for(search_term)
    puts "You asked for: #{search_term}"
    puts Songwriter.search(search_term)
  end


end

hippublisher = HipPublisher.new()
hippublisher.main()